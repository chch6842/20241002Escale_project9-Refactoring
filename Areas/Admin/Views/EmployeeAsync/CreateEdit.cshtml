@model escale.Models.Employees

@{
    string str_command = (Model.Id == 0) ? "新增" : "修改";
    ViewData["Title"] = $"員工資料{str_command}";

    List<SelectListItem> TitleList = new List<SelectListItem>();
    List<SelectListItem> DepartmentList = new List<SelectListItem>();
    List<SelectListItem> GenderList = new List<SelectListItem>();
    List<SelectListItem> CityNameList = new List<SelectListItem>();
    List<SelectListItem> CityAreaList = new List<SelectListItem>();
    using var sqlTitle = new z_sqlTitles();
    using var sqlDept = new z_sqlDepartments();
    using var sqlData = new z_sqlCodeDatas();
    using var sqlCity = new z_sqlCitys();
    using var sqlCityArea = new z_sqlCityAreas();
    TitleList = sqlTitle.GetDropDownList("TitleNo", "TitleName", "TitleNo", true);
    DepartmentList = sqlDept.GetDropDownList("DeptNo", "DeptName", "DeptNo", true);
    GenderList = sqlData.GetDropDownList("Gender", false);
    CityNameList = sqlCity.GetDropDownList("CityName", "CityName", "CityName", false);
    @* CityAreaList = sqlCityArea.GetDropDownList(Model.CityName); *@
}

<div class="card border-secondary card-size-medium">
    <div class="card-header bg-secondary text-white">
        <h5>@ViewData["Title"]</h3>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal  mt-2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.IsValid, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.IsValid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.EmpNo, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmpNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @* <div class="col-md-2">
                        @Html.LabelFor(model => model.GenderName, htmlAttributes: new { @class = "control-label" })
                    </div> *@
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.GenderCode, GenderList , new { @class = "form-control selectpicker" , data_live_search = "true" })
                        @Html.ValidationMessageFor(model => model.GenderCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @* <div class="col-md-2">
                        @Html.LabelFor(model => model.DeptName, htmlAttributes: new { @class = "control-label" })
                    </div> *@
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DeptNo, DepartmentList , new { @class = "form-control selectpicker" , data_live_search = "true" })
                        @Html.ValidationMessageFor(model => model.DeptNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @* <div class="col-md-2">
                        @Html.LabelFor(model => model.TitleName, htmlAttributes: new { @class = "control-label" })
                    </div> *@
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TitleNo, TitleList , new { @class = "form-control selectpicker" , data_live_search = "true" })
                        @Html.ValidationMessageFor(model => model.TitleNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control datepicker" , type="text" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.OnboardDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OnboardDate, new { htmlAttributes = new { @class = "form-control datepicker" , type="text" } })
                        @Html.ValidationMessageFor(model => model.OnboardDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.LeaveDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LeaveDate, new { htmlAttributes = new { @class = "form-control datepicker" , type="text" } })
                        @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ContactTel, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactTel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactTel, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        <div class="row">
                            @* <div class="col-md-3">
                                @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.CityArea, htmlAttributes: new { @class = "control-label" })
                            </div> *@
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="row">
                            @* <div class="col-md-3">
                                @Html.DropDownListFor(model => model.CityName, CityNameList, new { @class = "form-control"  })
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownListFor(model => model.CityArea, CityAreaList, new { @class = "form-control" })
                            </div> *@
                            <div class="col-md-6">
                               @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <hr />
            <div class="row form-group">
                <div class="col-md-12">
                    <input type="submit" value="異動存檔" class="btn btn-primary" />
                    <a href="@Url.Action("Index", "EmployeeAsync" , new {area = ""})" class="btn btn-success" >返回列表</a>
                </div>
            </div>
        }
    </div>
</div>

@section ScriptsBody {
    <script>
        $(document).ready(function () {
            $("#CityName").change(function () {
                $("#CityArea").empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCityAreaList" , "EmployeeAsync" , new { area = ""})',
                    dataType: "json",
                    data: { id: $("#CityName").val() },
                    success: function (values) {
                        $.each(values, function (i, data) {
                            $("#CityArea").append(
                                '<option value="' + data.Value + '">' + data.Text + '</option>'
                            );
                        });
                    },
                    error: function (ex) {
                        alert("無法讀取鄉鎮區資料!! :" + ex);
                    }
                });
            });
        });
    </script>
}